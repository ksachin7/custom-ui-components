name: Continuous Integration and Deployment to Vercel

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Setup Node.js 20
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      # Step 2: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 4: Check for merge conflicts
      - name: Check for merge conflicts
        run: |
          # Check if there are any merge conflicts
          if git diff --quiet; then
            echo "No merge conflicts found"
          else
            # Display merge conflicts and fail the workflow
            echo "Merge conflicts found. Please resolve conflicts and try again."
            git status
            exit 1
          fi

      # Step 5: Install project dependencies in ui-fundamentals
      - name: Install dependencies
        run: npm install

      # Step 6: Run tests
      - name: Run tests
        run: npm test

      # Step 7: Lint code
      - name: Lint code
        run: npm run lint

  deploy_to_vercel:
    runs-on: ubuntu-latest
    needs: build
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      # Checkout code including submodules
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      # Install Vercel CLI
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      # Pull Vercel Environment Information
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      # Build Project Artifacts
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      # Deploy Project Artifacts to Vercel
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
